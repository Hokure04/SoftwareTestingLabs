// Generated by Selenium IDE
import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterEach;
import static org.junit.jupiter.api.Assertions.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class AuthorizationTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  WebDriverWait wait;

  @BeforeEach
  public void setUp() {
    WebDriverManager.chromedriver().setup();
    driver = new ChromeDriver();
    wait = new WebDriverWait(driver, Duration.ofSeconds(25));
    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(25));
    driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(15));
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }

  @AfterEach
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void authorizationTest() {
    driver.get("https://otvet.mail.ru/");
    driver.manage().window().setSize(new Dimension(1050, 716));
    driver.findElement(By.xpath("//div[@id=\'ph-whiteline\']/div/div/button")).click();
    driver.switchTo().frame(2);
    driver.findElement(By.xpath("//form/div[2]/div/div")).click();
    driver.findElement(By.xpath("//div[@id=\'root\']/div/div/div/div[2]/div/form/div[2]/div[2]/div/div/div/div/div/div/div[3]/div/div/div/div/div")).click();
    driver.findElement(By.xpath("//div[@id=\'react-select-2-option-0\']/div/div/div[2]/span")).click();
    driver.findElement(By.xpath("//input[@name=\'username\']")).click();
    driver.findElement(By.xpath("//input[@name=\'username\']")).sendKeys("test_sftware_lab3");
    driver.findElement(By.cssSelector(".iconWithText-0-2-109 > .base-0-2-23")).click();


    WebElement firstField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@value='']")));
    WebElement secondField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@value='']")));


    // Ожидаем, пока пользователь введет первый символ в поле
    wait.until(ExpectedConditions.attributeToBeNotEmpty(firstField, "value"));
    System.out.println("Первый символ введен: " + firstField.getAttribute("value"));

    // Ожидаем, пока пользователь введет второй символ в поле
    wait.until(ExpectedConditions.attributeToBeNotEmpty(secondField, "value"));
    System.out.println("Второй символ введен: " + secondField.getAttribute("value"));

    WebElement codeField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@name='Code']")));
    // Ожидаем, пока пользователь введет код в поле
    wait.until(ExpectedConditions.attributeToBeNotEmpty(codeField, "value"));
    System.out.println("Код введен: " + codeField.getAttribute("value"));


    driver.findElement(By.xpath("//div[@id=\'root\']/div/div/div/div[2]/div/form/div[2]/div/div[2]/div/button/span")).click();
    driver.switchTo().defaultContent();
    driver.findElement(By.cssSelector(".zrlCv > path")).click();
  }
}
